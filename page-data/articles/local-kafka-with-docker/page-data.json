{"componentChunkName":"component---src-templates-article-template-js","path":"/articles/local-kafka-with-docker","result":{"data":{"markdownRemark":{"html":"<p>I have seen many people struggling to make Kafka work on their machine, sometimes because of very weird setup configuration arcanes (mostly on Windows huh).\nSo here is a little guide to set up a running service in order to play around with Kafka on your computer.</p>\n<p>We will be using Docker as it helps reproductibility.\nBasically, we will be using an \"image\" of a working Kafka service and run it on your computer, and Docker is the layer between this image and your OS.</p>\n<p><em>Disclaimer : this is by no means a production-level setup ! It is just meant to help students install Kafka on their computers.</em></p>\n<h2>1. Install Docker</h2>\n<p>Go to <a href=\"https://docs.docker.com/docker-for-windows/install/\">https://docs.docker.com/docker-for-windows/install/</a> and follow the instructions corresponding to your OS.\nYou might have to create an account to download Docker Desktop if you are on Windows.</p>\n<p>Please be careful when installing Docker, and follow <strong>all instructions</strong> properly.\nIf next steps do not work as expected, you probably messed up when installing.</p>\n<h2>2. Start kafka</h2>\n<p>Simply type in the command line:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">docker run -p 2181:2181 -p 9092:9092 --env ADVERTISED_HOST=localhost --env ADVERTISED_PORT=9092 spotify/kafka</span></span></code></pre>\n<p>It should download the Kafka Docker image from Docker Hub, and then run it.</p>\n<h2>3. Using Kafka</h2>\n<p>Because you are using Kafka through a Docker image, you do not have access to all the <code>kafka-*.sh</code> script files usually used in tutorials.\nA solution is to programmatically access Kafka, for instance with <code>kafka-python</code>.</p>\n<p>For instance, you can create topics like this:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">from kafka.admin import KafkaAdminClient, NewTopic</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">admin_client = KafkaAdminClient(bootstrap_servers=&quot;localhost:9092&quot;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">topic_list = []</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">topic_list.append(NewTopic(name=&quot;example_topic&quot;, num_partitions=1, replication_factor=1))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">admin_client.create_topics(new_topics=topic_list, validate_only=False)</span></span></code></pre>\n<p>As for the rest, just follow <code>kafka-python</code>'s documentation.</p>\n<h2>The end</h2>\n<p>This is yet another demonstration of the power of Docker for reproductibility.\nI've seen many teachers struggle to install software on students' computers.\nIn many case, Docker might be what you are looking for !</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-visual-studio {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-visual-studio .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"date":"28-01-2020","path":"/articles/local-kafka-with-docker","title":"Running a Kafka service simply on local using Docker","abstract":"Docker is all you need","tags":"system administration, big data, docker"}},"site":{"siteMetadata":{"siteUrl":"https://guillaumedesforges.github.io"}}},"pageContext":{}},"staticQueryHashes":["63159454"]}
{"componentChunkName":"component---src-templates-article-template-js","path":"/articles/nextjs-firebase","result":{"data":{"markdownRemark":{"html":"<p>When doing Web development, even if the application that we want to build has only a few functionalities and requirements,\nthe fixed cost (understand \"time\") of creating an application, setting things up and deploying is never neglectable.</p>\n<p>I want to be able to spawn Web application fast, from zero to a fully working deployed application available to the customer.</p>\n<h2>Choose your <del>player</del> stack</h2>\n<h3>NextJS</h3>\n<p>In that regard, I think NextJS is a great tool.\nIn my opinion, NextJS facilitates the creation of a frontend.\nFrom their <a href=\"https://nextjs.org/\">front page</a>:</p>\n<blockquote>\n<p>Next.js gives you the best developer experience with all the features you need for production:\nhybrid static &#x26; server rendering, TypeScript support, smart bundling, route pre-fetching, and more.\nNo config needed.</p>\n</blockquote>\n<p>Very cool!</p>\n<p>It makes it easy to build a simple application, while giving enough freedom to make it more and more complex, as features are requested.</p>\n<p>Also, it supports TypeScript, which is a hard-requirement for me.</p>\n<h3>Firebase</h3>\n<p>Firebase is part of the Google ecosystem.\nIt's a nice sugar on top of the Google Cloud Platform: while being able to tinker things on GCP, it manages most of (if not all) the tedious infrastructure work.</p>\n<p>It also allows to have authentication, database (even real-time!) and storage without <strong>any code</strong>.\nThis is an awesome feature in order to create a product as fast as possible.</p>\n<p>Firebase <a href=\"https://moqod.com/downsides-of-firebase-limitations-to-be-aware-of/\">has limitations</a>, but it seems to be a good way to start a product and develop <em>fast</em>.</p>\n<p>We will use Hosting (required for any Web app) and Functions (serverless) to deploy our app in production.</p>\n<p>Also, at the time of writing, the free plan is pretty big, which is perfect for personal projects.\nIt sure caught my attention, but let's pray it will stay like this.</p>\n<h2>Requirements</h2>\n<p>You will need Node JS version 12.\nI also promote the use of <a href=\"https://yarnpkg.com/\">yarn</a> instead of npm.</p>\n<h3>Start using Nix today (optional)</h3>\n<p>Do you have issues managing all your development environments on your computer?</p>\n<p>They conflict between each other because you install everything globally on your computer?</p>\n<p>The development experience is inconsistent across the developers workstations?</p>\n<p>Start using Nix for this project!</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">sh </span><span class=\"mtk11\">&lt;(curl -L https://nixos.org/nix/install)</span><span class=\"mtk1\"> --daemon </span><span class=\"mtk3\"># install nix</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">nix-env (Nix) 2.3.6 </span><span class=\"mtk3\"># check it has been installed</span></span></span></code></pre>\n<p>create a <code>shell.nix</code> file in your project folder:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"nix\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">with import &lt;nixpkgs&gt; {};</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">mkShell {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  buildInputs = [</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    nodejs-12_x</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    yarn</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  shellHook = &#39;&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    export PATH=${toString ./.}/node_modules/.bin:$PATH</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  &#39;&#39;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>run</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">nix-shell</span></span></span></code></pre>\n<p>wait and... poof, you get a shell with Node JS 12 and yarn!</p>\n<p>In VS Code, you can use <a href=\"https://marketplace.visualstudio.com/items?itemName=arrterian.nix-env-selector\">Nix Environment Selector</a>\nto get the environment in the editor (e.g. for autocomplete, TypeScript language server, ...).</p>\n<h2>Setup the Firebase project</h2>\n<blockquote>\n<p>If you have not done it yet, create a directory for your project, we'll consider it to be our working directory.</p>\n</blockquote>\n<p>Start by installing the Firebase CLI tools.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn add -D firebase-tools</span></span></span></code></pre>\n<p>We now have to create our Firebase project.\nIt can be done on the Firebase website (\"Console\"), but also using the CLI.</p>\n<p>In order to do such interactions, we need to login.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">firebase login</span></span></span></code></pre>\n<p>Follow the given steps.\nAfter that, we can now run:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">firebase init</span></span></span></code></pre>\n<p>Select (arrows + space) \"Hosting\" and \"Functions\", then go further (enter).</p>\n<blockquote>\n<p>\"Hosting\" allows you to serve static files and use rewrite rules.\n\"Functions\" allows to define Cloud Function written in JavaScript, for instance a HTTP server.</p>\n</blockquote>\n<p>After that, select \"Create a new project\".</p>\n<p>Give it a project ID (it will be <code>nextjs-firebase</code> for me).\nI tend to use the id as name as well (default behavior).</p>\n<p>It then asks questions to setup \"Functions\".\nI selected to use \"TypeScript\", not use ESLint (I can always set it up later), not install dependencies now (we will use yarn).</p>\n<p>It then asks questions to setup \"Hosting\".\nI selected all default settings: \"public\" folder, no URL rewrites, no builds &#x26; deploys with GitHub.</p>\n<p>It normally has created:</p>\n<ul>\n<li><code>./.firebaserc</code>: sets the Firebase project ID to interact with when using the CLI</li>\n<li><code>./firebase.json</code>: the configuration of your firebase project</li>\n<li><code>./.gitignore</code></li>\n<li><code>./public/</code>: used by our Hosting, contains the files served statically</li>\n<li><code>./functions/</code>: a TypeScript project that will define our Cloud Functions</li>\n</ul>\n<h2>Your first deploy</h2>\n<p>Let's deploy everything to check if it works!</p>\n<p>Install dependencies for the <code>./functions/</code> folder with yarn:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn --cwd functions/ install</span></span></span></code></pre>\n<p>Uncomment the code in <code>./functions/src/index.ts</code>.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"typescript\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">as</span><span class=\"mtk1\"> functions </span><span class=\"mtk4\">from</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;firebase-functions&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Start writing Firebase Functions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// https://firebase.google.com/docs/functions/typescript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> helloWorld = functions.https.onRequest((request, response) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  functions.logger.info(</span><span class=\"mtk11\">&quot;Hello logs!&quot;</span><span class=\"mtk1\">, { structuredData: </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  response.send(</span><span class=\"mtk11\">&quot;Hello from Firebase!&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>The exported items are going to be Cloud Functions.\nHere we define a Cloud Function <code>helloWorld</code>.</p>\n<p>To make it accessible, we need to edit <code>firebase.json</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"json\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;functions&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;predeploy&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;yarn --cwd functions/ build&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;hosting&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;public&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;public&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;ignore&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;firebase.json&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;**/.*&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;**/node_modules/**&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;rewrites&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;source&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;helloWorld&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;function&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;helloWorld&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>See that we have a <code>predeploy</code> attribute in <code>functions</code>, where we define our build command for instance.\nI have edited it to use yarn instead of npm.</p>\n<p>I added an attribute <code>rewrites</code> to <code>hosting</code>.\nThis allows to create rewrite rules for the web server.\nIt is a list of objects, that must have the attribute <code>source</code> (the route of the url requested), and either a <code>destinatiion</code> or <code>function</code>.\nIn our case, we want to redirect <code>/helloWorld</code> to our Cloud Function <code>helloWorld</code>, so we write the above rewrite rule.</p>\n<p>Let's deploy it then!</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">firebase deploy</span></span></span></code></pre>\n<p><strong>Woops!</strong>\nNormally you should get an error: </p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Your project nextjs-firebase must be on the Blaze (pay-as-you-go) plan to complete this command.</span></span></code></pre>\n<p>Follow the link and modify your billing (if you want to continue).</p>\n<blockquote>\n<p>Disclaimer: I cannot be held accountable for any billing you might have to pay. Continue at your own risks.</p>\n</blockquote>\n<p>... although the free plan is, in my opinion, quite large for small personnal projects.</p>\n<p>You can even set a budget alert at 1$.</p>\n<p>Let's deploy again:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">firebase deploy</span></span></span></code></pre>\n<p>Go check your website!</p>\n<p>Your URL is given by the CLI (mine was <code>https://nextjs-firebase.web.app/</code>).</p>\n<p>You should be greeted by a page, which code is from <code>./public/index.html</code> in your project.</p>\n<p>Now go to the route <code>/helloWorld</code> (in my case <code>https://nextjs-firebase.web.app/helloWorld</code>)</p>\n<p>You should get:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Hello from Firebase!</span></span></code></pre>\n<p>Congrats!</p>\n<h2>Setup NextJS</h2>\n<p>We now want to setup a NextJS app.</p>\n<p>From the working directory of our project, let's create it:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn create next-app --example with-typescript</span></span></span></code></pre>\n<p>I used the default name, <code>my-app</code>.\nA folder <code>my-app</code> has been created.</p>\n<p>You can run the NextJS development server locally using:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn --cwd my-app/ dev</span></span></span></code></pre>\n<p>That's it!\nI won't explain how to do NextJS Web development, there are many ressources out there that do so.</p>\n<p>Now, what we want to do is to run the NextJS server as a Cloud Function.</p>\n<p>Because of the way Cloud Functions gets deployed, we will need to have our NextJS app folder inside of our Cloud Functions folder.\nIn my case, I decided to change the Cloud Functions folder to be the project directory.</p>\n<p>In order to make this change, we need to set <code>functions.source</code> in <code>firebase.json</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"json\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;functions&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;source&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;.&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;predeploy&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;yarn --cwd ./ build&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;hosting&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;public&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;public&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;ignore&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;firebase.json&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;**/.*&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;**/node_modules/**&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;rewrites&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;source&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;/helloWorld&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;function&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;helloWorld&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Note that I had to also change the <code>predeploy</code> hooks.</p>\n<p>I then move all the content from <code>./functions/</code> to <code>./</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># remove project-level package.json</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rm package.json</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># move functions/src, tsconfig.json, package.json, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">mv functions/{scr,tsconfig.json,package.json} .</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># reinstall dependencies</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn add -D firebase-tools</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">yarn install</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># remove old functions folder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rm -R functions</span></span></span></code></pre>\n<p>You may have to update <code>./.gitignore</code>.</p>\n<p>We can now change our Cloud Functions in <code>./src/index.ts</code>, and then rewrite all HTTP requests to this functions!</p>\n<p><code>./src/index.ts</code></p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"typescript\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">as</span><span class=\"mtk1\"> admin </span><span class=\"mtk4\">from</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;firebase-admin&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">as</span><span class=\"mtk1\"> functions </span><span class=\"mtk4\">from</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;firebase-functions&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> next </span><span class=\"mtk4\">from</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;next&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">admin.initializeApp();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> dev = process.env.NODE_ENV !== </span><span class=\"mtk11\">&quot;production&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> app = next({ dev, dir: </span><span class=\"mtk11\">&quot;my-app&quot;</span><span class=\"mtk1\"> });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> handle = app.getRequestHandler();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">export</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> nextjs = functions.https.onRequest(</span><span class=\"mtk4\">async</span><span class=\"mtk1\"> (request, response) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  console.log(</span><span class=\"mtk11\">&quot;Received requested: &quot;</span><span class=\"mtk1\"> + request.originalUrl);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> app.prepare().then(() </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> handle(request, response));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>The key thing here is this line:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"typescript\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> app = next({ dev, dir: </span><span class=\"mtk11\">&quot;my-app&quot;</span><span class=\"mtk1\"> });</span></span></span></code></pre>\n<p>We set the NextJS server folder to our NextJS app folder.</p>\n<p>Since the Firebase CLI will pack and upload the source folder of our Cloud Functions (here our project folder), it needs to contain the NextJS folder,\nwhich is why we did the moving operation above.</p>\n<p>If we hadn't done it, the Cloud Function <code>nextjs</code> wouldn't have found the NextJS app folder (and its <code>.next</code> folder).</p>\n<p>Now, we only need to setup our deployement configuration:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"json\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;functions&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;source&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;.&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;predeploy&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;yarn --cwd ./ build&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;yarn --cwd my-app/ build&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;ignore&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;**/node_modules/**&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;hosting&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;public&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;public&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;rewrites&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;source&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;**&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;function&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;nextjs&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>I have added another hook to build the NextJS application.\nThis will produce a <code>./my-app/.next/</code> folder with the compiled NextJS app.</p>\n<p>I also edited the <code>hosting.rewrites</code> to redirect all requests to our NextJS server.</p>\n<p>Before deployement, keep in mind that all files in <code>./public/</code> will overrule the rewrite rules and be served.\nWe need to remove them, while keeping the <code>./public</code> folder.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rm public/*</span></span></span></code></pre>\n<p>Note that the NextJS server will run in the function, and requires some more dependencies.\nIn fact, the dependencies of your <code>my-app</code> project have to be given to the server whenever it might be neede for SSR (server-side rendering).</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">yarn add next react react-dom @types/react @types/react-dom webpack</span></span></code></pre>\n<p>I also had to add the <code>esModuleInterop</code> to my <code>tsconfig.json</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"json\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;compilerOptions&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;module&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;commonjs&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;noImplicitReturns&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;noUnusedLocals&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;outDir&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;lib&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;sourceMap&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;strict&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;target&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;es2017&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;esModuleInterop&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;compileOnSave&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk8\">&quot;include&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">&quot;src&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<blockquote>\n<p>You might encounter other build errors.\nFix them before continuing: you need to be able to run <code>yarn build</code> without issues.</p>\n<p>For instance, I had to <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/issues/49528\">hack webpack temporarly</a>.</p>\n</blockquote>\n<p>Let's deploy!</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">firebase deploy</span></span></span></code></pre>\n<p>It will ask if you would like to delete the <code>helloWorld</code> function.\nYou can (should) do so.</p>\n<p>Check the given URL...</p>\n<h2>Conclusion</h2>\n<p>Does it work? Congrats!</p>\n<p>If not, you should check out my repo: <a href=\"https://github.com/GuillaumeDesforges/nextjs-firebase\">https://github.com/GuillaumeDesforges/nextjs-firebase</a></p>\n<p>If you have any issue, don't hesitate to <a href=\"https://github.com/GuillaumeDesforges/nextjs-firebase/issues/new\">create a new issue</a>.\nI'll try my best to help you.</p>\n<p>Now you have it, fast and scalable Web app development!</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-visual-studio {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-visual-studio .mtk1 { color: #D4D4D4; }\n  .dark-visual-studio .mtk11 { color: #CE9178; }\n  .dark-visual-studio .mtk3 { color: #6A9955; }\n  .dark-visual-studio .mtk4 { color: #569CD6; }\n  .dark-visual-studio .mtk8 { color: #9CDCFE; }\n  .dark-visual-studio .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"date":"10-12-2020","path":"/articles/nextjs-firebase","title":"Creating and deploying a NextJS app with Firebase","abstract":"Serverless development is cool","tags":"software engineering, web development, firebase"}},"site":{"siteMetadata":{"siteUrl":"https://guillaumedesforges.github.io"}}},"pageContext":{}},"staticQueryHashes":["63159454"]}
{"componentChunkName":"component---src-templates-article-template-js","path":"/articles/android-dev-nix","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Disclaimer note! Before diving in, please keep in mind that currently VS Code Java plugin <a href=\"https://github.com/redhat-developer/vscode-java/issues/1390\">does not support Android development</a>.\nIt will support react-native development, but not the Java part of it (only the lightweight Java features).</p>\n</blockquote>\n<p>Since I am a Web developer, I wanted to build my first Android app using React Native.\nI have a computer on Windows which I use in my everyday life, and a server on Linux NixOS which I use to code.\nThanks to VS Code \"Remote Development\" extension I can code like I'm on this Linux machine from anywhere, including my Windows computer.\nLinux development on one tab, my favorite game in another tab: best of both worlds.</p>\n<p>However this restricts me to using VS Code's remote development for all my code projects which means that I can't use Android Studio.\nWell, I could, but I don't like developping on Windows, I greatly prefer using Nix.</p>\n<p>I was really surprised to find that all the docs and ressources about making an Android app were always using Android Studio.\nSo I decided to come up with a simple guide explaining how to do it without it.</p>\n<p>In my case, I will be using Nix and VS Code.</p>\n<h2>Setting up the development environment with Nix</h2>\n<p>Thanks to Nix, one can create a development environment (shell) from a file.\nCheck it out: <a href=\"https://nixos.org/\">https://nixos.org/</a></p>\n<p>At the root of the project, I create a <code>shell.nix</code> file:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"nix\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">let</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  pkgs = import &lt;nixpkgs&gt; { config.android_sdk.accept_license = true; };</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  mainBuildToolsVersion = &quot;29.0.2&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  android = pkgs.androidenv.composeAndroidPackages {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    toolsVersion = &quot;26.1.1&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    platformToolsVersion = &quot;29.0.6&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    buildToolsVersions = [ mainBuildToolsVersion ];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     = [ &quot;29&quot; ];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  };</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">in</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">pkgs.mkShell {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  buildInputs = [</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pkgs.gradle</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    pkgs.jdk</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    android.androidsdk</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ANDROID_HOME = &quot;${android.androidsdk}/libexec/android-sdk&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  GRADLE_OPTS = &quot;-Dorg.gradle.project.android.aapt2FromMavenOverride=${android.androidsdk}/libexec/android-sdk/build-tools/${mainBuildToolsVersion}/aapt2&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Although this is not a Nix tutorial (refer to <a href=\"https://nixos.org/guides/dev-environment.html\">this</a> instead), let me explain it step by step.</p>\n<p>We define our <code>pkgs</code> variable as usual, but we give it the <code>config.android_sdk.accept_license = true;</code>.\nThis is required in order to use the Android SDK.</p>\n<p>Nixpkgs provides the <code>pkgs.androidenv.composeAndroidPackages</code> function that take a set of properties for your Android SDK environment and returns a set of derivations.\nThe most important one for us is <code>androidsdk</code>.\nYou can read more about it on GitHub: <a href=\"https://github.com/NixOS/nixpkgs/blob/master/doc/languages-frameworks/android.section.md\">nixos/nixpkgs # doc/languages-frameworks/android.section.md</a>.</p>\n<p>Be very careful about the versions you select for <code>toolsVersion</code>, <code>platformToolsVersion</code>, <code>buildToolsVersions</code> and <code>platformVersions</code>.\nThey have to work together, or else some weird errors sometime happens because you have not selected versions that are compatible with one each other.</p>\n<p>This <code>androidsdk</code> attribute is added to the <code>buildInputs</code> of <code>mkShell</code> so that we have all the Android libs and tools in our environment.</p>\n<p>This however does not set the <code>ANDROID_HOME</code> environment variable, which we define by hand in <code>mkShell</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"nix\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">ANDROID_HOME = &quot;${android.androidsdk}/libexec/android-sdk&quot;;</span></span></code></pre>\n<p>There was also an AAPT 2 bug in my case.\nThe same as <a href=\"https://github.com/NixOS/nixpkgs/issues/72220\">here</a>.\nThe solution is to set <code>org.gradle.project.android.aapt2FromMavenOverride</code> in <code>GRADLE_OPTS</code> to use a specific binary, the one in our custom Android SDK:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"nix\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">GRADLE_OPTS = &quot;-Dorg.gradle.project.android.aapt2FromMavenOverride=${android.androidsdk}/libexec/android-sdk/build-tools/${mainBuildToolsVersion}/aapt2&quot;;</span></span></code></pre>\n<p>After that, we only need to add <code>jdk</code> and <code>gradle</code> to the <code>buildInputs</code>.</p>\n<p>Open VS Code, use the <a href=\"https://marketplace.visualstudio.com/items?itemName=arrterian.nix-env-selector\">Nix Environment Extension</a>, select <code>shell.nix</code> and reload.</p>\n<p>We are ready to go!</p>\n<h2>Creating the project build configuration</h2>\n<p>We will use Gradle for our builds.</p>\n<p>Let's create our top-level gradle configuration, a root file called <code>build.gradle</code>.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"gradle\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">buildscript {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    repositories {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        google()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        jcenter()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        classpath </span><span class=\"mtk11\">&#39;com.android.tools.build:gradle:3.6.4&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">allprojects {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    repositories {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        google()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        jcenter()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">task clean(type: </span><span class=\"mtk4\">Delete</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    delete rootProject.buildDir</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This is the basic build configuration you would find by generating your project with Android Studio.\nNote that <code>com.android.tools.build:gradle:3.6.4</code> refers to the Gradle plugin for Android development.</p>\n<blockquote>\n<p>Note: the version specified here will maybe have to be changed in the future. Check <a href=\"https://developer.android.com/studio/releases/gradle-plugin\">the release notes</a>.</p>\n</blockquote>\n<p>If you want to use a Gradle wrapper, you can do</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">gradle wrapper</span></span></span></code></pre>\n<p>to generate <code>gradlew</code>.</p>\n<blockquote>\n<p>Be sure to be inside the nix-shell before using <code>gradle wrapper</code>.</p>\n</blockquote>\n<p>I would advise to then create a <code>gradle.properties</code> file with the following line:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">android.useAndroidX=true</span></span></code></pre>\n<p>This will allow you to use AndroidX, with its latest cool features.</p>\n<h2>Creating our app</h2>\n<p>Let's create a folder <code>app</code>.</p>\n<p>We will first create the build configuration of this app.\nLet's make a file called <code>build.gradle</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"gradle\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">apply plugin: </span><span class=\"mtk11\">&#39;com.android.application&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    compileSdkVersion </span><span class=\"mtk5\">29</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    buildToolsVersion </span><span class=\"mtk11\">&quot;29.0.2&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    defaultConfig {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        applicationId </span><span class=\"mtk11\">&quot;com.example.myapplication&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        versionCode </span><span class=\"mtk5\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        versionName </span><span class=\"mtk11\">&quot;1.0&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        minSdkVersion </span><span class=\"mtk5\">16</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        targetSdkVersion </span><span class=\"mtk5\">29</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    buildTypes {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        release {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            minifyEnabled </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            proguardFiles getDefaultProguardFile(</span><span class=\"mtk11\">&#39;proguard-android.txt&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    implementation </span><span class=\"mtk11\">&#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    implementation </span><span class=\"mtk11\">&#39;androidx.appcompat:appcompat:1.2.0&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Let's walk through this file:</p>\n<p>We first apply the android plugin thanks to the first line</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"gradle\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">apply plugin: </span><span class=\"mtk11\">&#39;com.android.application&#39;</span></span></span></code></pre>\n<p>which allows us to use the <code>android</code> directive:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"gradle\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    compileSdkVersion </span><span class=\"mtk5\">29</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    buildToolsVersion </span><span class=\"mtk11\">&quot;29.0.2&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    defaultConfig {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        applicationId </span><span class=\"mtk11\">&quot;com.example.myapplication&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        versionCode </span><span class=\"mtk5\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        versionName </span><span class=\"mtk11\">&quot;1.0&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        minSdkVersion </span><span class=\"mtk5\">16</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        targetSdkVersion </span><span class=\"mtk5\">29</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    buildTypes {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        release {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            minifyEnabled </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            proguardFiles getDefaultProguardFile(</span><span class=\"mtk11\">&#39;proguard-android.txt&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<blockquote>\n<p>Note: specified version here will maybe have to be changed in the future. They should match your SDK versions defined in <code>shell.nix</code>.</p>\n</blockquote>\n<p>For the sake of demonstration, I have added some Android dependencies:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"gradle\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    implementation </span><span class=\"mtk11\">&#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    implementation </span><span class=\"mtk11\">&#39;androidx.appcompat:appcompat:1.2.0&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Now, onto writing the code of the actual app!</p>\n<p>Create the folder path <code>app/src/main</code></p>\n<p>Let's start with the <code>app/src/main/AndroidManifest.xml</code> file.</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"xml\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;?</span><span class=\"mtk4\">xml</span><span class=\"mtk8\"> version</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;1.0&quot;</span><span class=\"mtk8\"> encoding</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;utf-8&quot;</span><span class=\"mtk13\">?&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">manifest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">xmlns:android</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">package</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;com.example.myapplication&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">application</span><span class=\"mtk1\"> </span><span class=\"mtk8\">android:label</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Demo App&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">activity</span><span class=\"mtk1\"> </span><span class=\"mtk8\">android:name</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;com.example.myapplication.MainActivity&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">intent-filter</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">action</span><span class=\"mtk1\"> </span><span class=\"mtk8\">android:name</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;android.intent.action.MAIN&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">category</span><span class=\"mtk1\"> </span><span class=\"mtk8\">android:name</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;android.intent.category.LAUNCHER&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">intent-filter</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">activity</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">application</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">manifest</span><span class=\"mtk13\">&gt;</span></span></span></code></pre>\n<p>There is not much to say about it.\nIt defines an application, \"Demo App\", with one activity named <code>com.example.myapplication.MainActivity</code>.\nThis is a very simple empty app!</p>\n<p>Now, we need some Java code.</p>\n<p>Create in <code>app/src/main/java</code> the path corresponding to the package path, here <code>app/src/main/com/example/myapplication</code>.\nIn that folder, create <code>MainActivity.java</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"java\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">package</span><span class=\"mtk1\"> com.example.myapplication;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> android.app.Activity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">import</span><span class=\"mtk1\"> android.os.Bundle;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> MainActivity </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> Activity {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    @</span><span class=\"mtk4\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">protected</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> onCreate(</span><span class=\"mtk4\">Bundle</span><span class=\"mtk1\"> savedInstanceState) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onCreate(savedInstanceState);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The package path matches the folder path after <code>app/src/main/java</code>.\nThe class name matches our Android manifest and extends <code>android.app.Activity</code>.\nThe method inside it doesn't do much, it just uses the super constructor to create the activity.</p>\n<h2>Building our app</h2>\n<p>Open a terminal, go to the root folder of the project and get to a nix shell:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">nix-shell</span></span></span></code></pre>\n<p>Then build it using Gradle</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">gradle build</span></span></span></code></pre>\n<p>if you use the gradle wrapper</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">./gradlew build</span></span></span></code></pre>\n<p>It should build without errors.</p>\n<blockquote>\n<p>If you get any errors, please <a href=\"https://github.com/GuillaumeDesforges/nix-android-template/issues/new\">create an issue</a>.</p>\n</blockquote>\n<h2>Launching / debugging</h2>\n<p>Now's the interesting part.\nI want to debug my app using the VS Code <a href=\"https://marketplace.visualstudio.com/items?itemName=adelphes.android-dev-ext\">Android debug extension</a> that runs on my development server with Nix, but I want to run an emulator on my desktop computer (on Windows).</p>\n<p>It's simple enough to do: start your Android emulator.\nI use Android Studio's AVD Manager, accessible from the Android Studio start window, <code>Configure</code> -> <code>AVD Manager</code>.\nAfter starting an emulator, you can close the AVD Manager window.</p>\n<p>I now use SSH port forwarding to forward the emulator.\nFrom my desktop (running the emulator) I launch:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ssh -vNR 5554:localhost:5554 -R 5555:localhost:5555 devserver</span></span></span></code></pre>\n<p>where <code>devserver</code> is an SSH configuration to connect to my Linux machine.</p>\n<p>You can check if the device is available, but running in the nix shell:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"bash\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">adb devices</span></span></span></code></pre>\n<p>which should display something like</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">List of devices attached</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">emulator-5554 device</span></span></code></pre>\n<p>You need an Android launch config in VS Code, see my <code>.vscode/launch.json</code>:</p>\n<pre class=\"grvsc-container dark-visual-studio\" data-language=\"json\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;version&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;0.2.0&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;configurations&quot;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;type&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;android&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;request&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;launch&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;name&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;Android launch&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;appSrcRoot&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;${workspaceRoot}/app/src/main&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;apkFile&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;${workspaceRoot}/app/build/outputs/apk/debug/app-debug.apk&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;adbPort&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk5\">5037</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;targetDevice&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&quot;${command:PickAndroidDevice}&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Then start this <code>Android launch</code> configuration.</p>\n<p><img src=\"/imgs/android-dev-nix/itworks.png\" alt=\"It works (screenshot)\"></p>\n<h2>Conclusion</h2>\n<p>You can find the source code of the project here: <a href=\"https://github.com/GuillaumeDesforges/nix-android-template\">https://github.com/GuillaumeDesforges/nix-android-template</a></p>\n<p>If you have difficulties, you can post a new <a href=\"https://github.com/GuillaumeDesforges/nix-android-template/issues/new\">issue</a>.</p>\n<p>In order to use React Native, I am going to follow the <a href=\"https://reactnative.dev/docs/integration-with-existing-apps\">steps described here</a>.\nI might write about it in another blogpost if it's more complex than what's written on the official website.</p>\n<p>I really love Nix because it simplifies my development experience.\nWhile I may struggle sometimes trying to get my very first environment for a project in an ecosystem I don't know yet, once it is done it is done <em>forever</em>.</p>\n<p>Debugging all the build errors I had was no fun, so I hope this blog post will be useful for others.</p>\n<p>Cheers!</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-visual-studio {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-visual-studio .mtk1 { color: #D4D4D4; }\n  .dark-visual-studio .mtk11 { color: #CE9178; }\n  .dark-visual-studio .mtk4 { color: #569CD6; }\n  .dark-visual-studio .mtk5 { color: #B5CEA8; }\n  .dark-visual-studio .mtk13 { color: #808080; }\n  .dark-visual-studio .mtk8 { color: #9CDCFE; }\n  .dark-visual-studio .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"date":"29-11-2020","path":"/articles/android-dev-nix","title":"Building my first Android app without Android Studio","abstract":"VS Code (Remote SSH), Nix, Gradle instead","tags":"software engineering, mobile development, android, vs code, nix"}},"site":{"siteMetadata":{"siteUrl":"https://guillaumedesforges.github.io"}}},"pageContext":{}},"staticQueryHashes":["63159454"]}